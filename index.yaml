id: github.com/cloud-native-toolkit/terraform-gitops-service-account
name: gitops-service-account
type: terraform
description: Module to create a service account in a gitops repo
tags:
  - tools
  - gitops
  - dashboard
versions:
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              resourceNames = optional(list(string))
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: '[]'
      - name: rbac_roles
        type: |-
          list(object({
              name      = string
            }))
        description: >-
          List of existing roles or cluster roles for which a role binding
          should be created to this service account 
        default: '[]'
      - name: rbac_cluster_scope
        type: bool
        description: >-
          Flag indicating that RBAC should be created as ClusterRole and
          ClusterRoleBinding instead of Role and RoleBinding
        default: false
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
      - name: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        moduleRef:
          id: gitops
          output: server_name
    version: v1.9.1
    outputs:
      - name: name
      - name: namespace
  - platforms: []
    providers:
      - name: gitops
        source: cloud-native-toolkit/gitops
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              resourceNames = optional(list(string))
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: '[]'
      - name: rbac_roles
        type: |-
          list(object({
              name      = string
            }))
        description: >-
          List of existing roles or cluster roles for which a role binding
          should be created to this service account 
        default: '[]'
      - name: rbac_cluster_scope
        type: bool
        description: >-
          Flag indicating that RBAC should be created as ClusterRole and
          ClusterRoleBinding instead of Role and RoleBinding
        default: false
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
      - name: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        moduleRef:
          id: gitops
          output: server_name
    version: v1.9.0
    outputs:
      - name: name
      - name: namespace
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              resourceNames = optional(list(string))
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: '[]'
      - name: rbac_roles
        type: |-
          list(object({
              name      = string
            }))
        description: >-
          List of existing roles or cluster roles for which a role binding
          should be created to this service account 
        default: '[]'
      - name: rbac_cluster_scope
        type: bool
        description: >-
          Flag indicating that RBAC should be created as ClusterRole and
          ClusterRoleBinding instead of Role and RoleBinding
        default: false
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
      - name: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        moduleRef:
          id: gitops
          output: server_name
    version: v1.8.0
    outputs:
      - name: name
      - name: namespace
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              resourceNames = optional(list(string))
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: '[]'
      - name: rbac_cluster_scope
        type: bool
        description: >-
          Flag indicating that RBAC should be created as ClusterRole and
          ClusterRoleBinding instead of Role and RoleBinding
        default: false
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
      - name: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        moduleRef:
          id: gitops
          output: server_name
    version: v1.7.1
    outputs:
      - name: name
      - name: namespace
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        moduleRef:
          id: gitops
          output: git_credentials
      - name: namespace
        type: string
        description: The namespace where the application should be deployed
        moduleRef:
          id: namespace
          output: name
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              resourceNames = optional(list(string))
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: '[]'
      - name: rbac_cluster_scope
        type: bool
        description: >-
          Flag indicating that RBAC should be created as ClusterRole and
          ClusterRoleBinding instead of Role and RoleBinding
        default: false
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
      - name: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        moduleRef:
          id: gitops
          output: server_name
    version: v1.7.0
    outputs:
      - name: name
      - name: namespace
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              resourceNames = optional(list(string))
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: rbac_cluster_scope
        type: bool
        description: >-
          Flag indicating that RBAC should be created as ClusterRole and
          ClusterRoleBinding instead of Role and RoleBinding
        default: false
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
        optional: true
    version: v1.6.0
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              resourceNames = optional(list(string))
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
        optional: true
    version: v1.5.0
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
        optional: true
    version: v1.4.1
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
      - name: pull_secrets
        type: list(string)
        description: The list of pull secrets that should be linked to the service account
        default: []
        optional: true
    version: v1.4.0
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
    version: v1.3.4
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
    version: v1.3.3
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
    version: v1.3.2
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
    version: v1.3.1
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The cluster where the application will be provisioned
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
    version: v1.3.0
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
      - name: sccs
        type: list(string)
        description: >-
          The list of sccs that should be generated for the service account
          (valid values are anyuid and privileged)
        default: []
        optional: true
    version: v1.2.0
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
      - name: rbac_rules
        type: |-
          list(object({
              apiGroups = list(string)
              resources = list(string)
              verbs     = list(string)
            }))
        description: Rules for rbac rules
        default: []
        optional: true
    version: v1.1.0
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_gitops] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_gitops] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: config_repo
        moduleRef:
          id: gitops
          output: config_repo
        type: string
        description: The repo that contains the argocd configuration
      - name: config_token
        moduleRef:
          id: gitops
          output: config_token
        type: string
        description: The token for the config repo
      - name: config_paths
        moduleRef:
          id: gitops
          output: config_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the config repo
      - name: config_projects
        moduleRef:
          id: gitops
          output: config_projects
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The ArgoCD projects in the config repo
      - name: application_repo
        moduleRef:
          id: gitops
          output: application_repo
        type: string
        description: The repo that contains the application configuration
      - name: application_token
        moduleRef:
          id: gitops
          output: application_token
        type: string
        description: The token for the application repo
      - name: application_paths
        moduleRef:
          id: gitops
          output: application_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the application repo
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: name
        type: string
        description: The name of the service account that should be created
    version: v1.0.0
    outputs:
      - name: name
        description: >-
          output "name" {   value = var.name   depends_on =
          [null_resource.setup_argocd] }
      - name: namespace
        description: >-
          output "namespace" {   value = var.namespace   depends_on =
          [null_resource.setup_argocd] }
  - platforms: []
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: cluster
        refs:
          - source: github.com/ibm-garage-cloud/terraform-ibm-container-platform
            version: '>= 1.7.0'
          - source: github.com/ibm-garage-cloud/terraform-ibm-ocp-vpc
            version: '>= 1.0.0'
          - source: github.com/ibm-garage-cloud/terraform-k8s-ocp-cluster
            version: '>= 2.0.0'
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: '>= 1.0.0'
    variables:
      - name: config_repo
        moduleRef:
          id: gitops
          output: config_repo
        type: string
        description: The repo that contains the argocd configuration
      - name: config_token
        moduleRef:
          id: gitops
          output: config_token
        type: string
        description: The token for the config repo
      - name: config_paths
        moduleRef:
          id: gitops
          output: config_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the config repo
      - name: config_projects
        moduleRef:
          id: gitops
          output: config_projects
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The ArgoCD projects in the config repo
      - name: application_repo
        moduleRef:
          id: gitops
          output: application_repo
        type: string
        description: The repo that contains the application configuration
      - name: application_token
        moduleRef:
          id: gitops
          output: application_token
        type: string
        description: The token for the application repo
      - name: application_paths
        moduleRef:
          id: gitops
          output: application_paths
        type: |-
          object({
              infrastructure = string
              services       = string
              applications   = string
            })
        description: The paths in the application repo
      - name: cluster_type
        moduleRef:
          id: cluster
          output: platform.type_code
        type: string
        description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
      - name: cluster_ingress_hostname
        moduleRef:
          id: cluster
          output: platform.ingress
        type: string
        description: Ingress hostname of the IKS cluster.
      - name: tls_secret_name
        moduleRef:
          id: cluster
          output: platform.tls_secret
        type: string
        description: The name of the secret containing the tls certificate values
        default: ''
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: image_tag
        type: string
        description: The image version tag to use
        default: v1.4.4
        optional: true
    version: v0.0.0
